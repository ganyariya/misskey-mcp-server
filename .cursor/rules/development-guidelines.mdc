---
description: 
globs: 
alwaysApply: true
---
# Development Guidelines

## Coding Standards

1. Follow Go's standard coding conventions
2. Package names should be lowercase with underscores for word separation
3. Add appropriate documentation comments for exported identifiers (those starting with capital letters)

## Testing

- Implement appropriate tests for each package, focusing on core domain logic.
- Tests for direct external API interactions or comprehensive E2E (End-to-End) scenarios are not required at this stage, to maintain a focus on easily testable units.
- Test files should follow the `*_test.go` naming convention

## Steps to be executed

- Please make sure that `go build` always succeeds for misskey-mcp-server.
- If test files exist, please make sure that `go test` passes successfully.

After satisfying the above, create a commit and pull request.
If the build or tests do not succeed, do not try to fix it on your own; please ask a human.

## Pull Requests

1. Work on new features or bug fixes in a new branch
2. Write clear and specific commit messages
3. Include the changes and reasons in the pull request description

## Comments

Never write comments. Absolutely do not write them.
They are redundant.

## Required Actions After Implementation

After implementation, please update the .cursor/rules as needed.
Add context to make development easier.

Also, update README.md according to the implemented API endpoints.

## Reference Resources

- [[Misskey API Documentation](mdc:https:/misskey.io/api-doc)](mdc:https://misskey.io/api-doc)
- https://github.com/yitsushi/go-misskey
